{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/TextInput.jsx","components/Home.jsx","components/Nav.jsx","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","style","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","TextInput","onChange","label","name","Home","patientsList","setPatientsList","patientDetails","setPatientDetails","isEdit","setIsEdit","updateStorage","list","key","moment","format","localStorage","setItem","JSON","stringify","getItem","length","parse","date","createdDate","map","patient","scan","amount","referedBy","onClick","onDoubleClick","patientData","filter","deleteData","target","_value","updatedDate","updateData","uuid","addData","Nav","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b39b44.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const auth = app.auth()\nexport default app\n","import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","import React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function Signup() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const { signup } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError('Passwords do not match');\n        }\n\n        try {\n            setError('');\n            setLoading(true);\n            await signup(emailRef.current.value, passwordRef.current.value);\n            history.push('/');\n        } catch {\n            setError('Failed to create an account');\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <div className=\"container\" style={{ maxWidth: 420 }}>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                ref={emailRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                ref={passwordRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                ref={passwordConfirmRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Button\n                            disabled={loading}\n                            className=\"w-100\"\n                            type=\"submit\"\n                        >\n                            Sign Up\n                        </Button>\n                    </Form>\n                    <br />\n\n                    <div className=\"w-100 text-center mt-2\">\n                        Already have an account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function Login() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const { login } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        try {\n            setError('');\n            setLoading(true);\n            await login(emailRef.current.value, passwordRef.current.value);\n            history.push('/');\n        } catch {\n            setError('Failed to log in');\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <div className=\"container\" style={{ maxWidth: 420 }}>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log In</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                ref={emailRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                ref={passwordRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Button\n                            disabled={loading}\n                            className=\"w-100\"\n                            type=\"submit\"\n                        >\n                            Log In\n                        </Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\n                    </div>\n                    <br />\n                    <div className=\"w-100 text-center mt-2\">\n                        Need an account? <Link to=\"/signup\">Sign Up</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\n\nexport default function ForgotPassword() {\n    const emailRef = useRef();\n    const { resetPassword } = useAuth();\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        try {\n            setMessage('');\n            setError('');\n            setLoading(true);\n            await resetPassword(emailRef.current.value);\n            setMessage('Check your inbox for further instructions');\n        } catch {\n            setError('Failed to reset password');\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <div className=\"container\" style={{ maxWidth: 420 }}>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {message && <Alert variant=\"success\">{message}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                ref={emailRef}\n                                required\n                            />\n                        </Form.Group>\n                        <Button\n                            disabled={loading}\n                            className=\"w-100\"\n                            type=\"submit\"\n                        >\n                            Reset Password\n                        </Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/login\">Login</Link>\n                    </div>\n                    <br />\n\n                    <div className=\"w-100 text-center mt-2\">\n                        Need an account? <Link to=\"/signup\">Sign Up</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  )\n}\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-11 19:40:41\n * @modify date 2021-05-11 19:40:41\n * @desc [description]\n */\nimport React from 'react';\n\nfunction TextInput({ value = '', type = 'text', onChange, label, name }) {\n    return (\n        <div className=\"row no-border\">\n            <label className=\"input-label\">{label}</label>\n            <input\n                className=\"input-box\"\n                type={type}\n                value={value}\n                name={name}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n\nexport default TextInput;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-11 19:25:30\n * @modify date 2021-05-11 21:20:13\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport uuid from 'react-uuid';\nimport TextInput from './TextInput';\n\nfunction Home() {\n    const [patientsList, setPatientsList] = useState([]);\n\n    const [patientDetails, setPatientDetails] = useState({});\n    const [isEdit, setIsEdit] = useState(false);\n\n    const updateData = () => {\n        let list = patientsList.map((patient) => {\n            if (patientDetails.id === patient.id) {\n                return {\n                    ...patientDetails,\n                    updatedDate: moment().format('MM-DD-YYYY'),\n                };\n            }\n            return patient;\n        });\n        updateStorage(list);\n    };\n\n    const addData = () => {\n        patientDetails.id = uuid();\n\n        let value = moment().format('MM-DD-YYYY');\n        if (patientDetails.value) {\n            value = moment(patientDetails.value, 'YYYY-MM-DD').format(\n                'MM-DD-YYYY'\n            );\n        }\n        patientDetails.createdDate = value;\n        patientDetails.updateData = value;\n        let list = [...patientsList];\n        list.push(patientDetails);\n        updateStorage(list);\n    };\n\n    const deleteData = (patientData) => {\n        let list = patientsList.filter(\n            (patient) => patientData.id !== patient.id\n        );\n        updateStorage(list);\n    };\n\n    const updateStorage = (list) => {\n        setPatientsList(list);\n        let key = moment().format('MM-YYYY');\n        localStorage.setItem(key, JSON.stringify(list));\n        setPatientDetails({});\n    };\n\n    useEffect(() => {\n        try {\n            let key = moment().format('MM-YYYY');\n            let list = localStorage.getItem(key);\n            if (list && list.length) setPatientsList(JSON.parse(list));\n        } catch (error) {}\n    }, []);\n\n    let date = moment().format('YYYY-MM-DD');\n\n    if (patientDetails.createdDate) {\n        date = moment(patientDetails.createdDate, 'MM-DD-YYYY').format(\n            'YYYY-MM-DD'\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"App-header\">\n                <div className=\"list\">\n                    <h2 className=\"heading\">List</h2>\n                    <div className=\"list-container\">\n                        {patientsList.length > 0 ? (\n                            <>\n                                <div className=\"row header\">\n                                    <div className=\"name\">Name</div>\n                                    <div className=\"date\">\n                                        <div>Date </div>\n                                        <div className=\"sub-text\">\n                                            (MM-DD-YYYY)\n                                        </div>\n                                    </div>\n                                    <div className=\"scan\">Scan</div>\n                                    <div className=\"amount\">Amount</div>\n                                    <div className=\"refered\">Refered By</div>\n                                    <div className=\"action\">Actions</div>\n                                </div>\n                                {patientsList.map((patient) => {\n                                    return (\n                                        <div className=\"row details\">\n                                            <div className=\"name\">\n                                                {patient.name}\n                                            </div>\n                                            <div className=\"date\">\n                                                {patient.createdDate}\n                                            </div>\n                                            <div className=\"scan\">\n                                                {patient.scan}\n                                            </div>\n                                            <div className=\"amount\">\n                                                {patient.amount}\n                                            </div>\n                                            <div className=\"refered\">\n                                                {patient.referedBy}\n                                            </div>\n                                            <div className=\"action\">\n                                                <button\n                                                    onClick={() => {\n                                                        setPatientDetails(\n                                                            patient\n                                                        );\n                                                        setIsEdit(true);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </button>\n                                                <button\n                                                    onDoubleClick={() => {\n                                                        deleteData(patient);\n                                                    }}\n                                                >\n                                                    Delete\n                                                </button>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </>\n                        ) : (\n                            <div className=\"zero-state\">No Data</div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"form\">\n                    <h2 className=\"heading\">Add Patient</h2>\n                    <div className=\"form-container\">\n                        <TextInput\n                            label=\"Name\"\n                            value={patientDetails.name}\n                            name=\"name\"\n                            onChange={(e) => {\n                                let { name, value } = e.target;\n                                setPatientDetails({\n                                    ...patientDetails,\n                                    [name]: value,\n                                });\n                            }}\n                        />\n                        <TextInput\n                            label=\"Date\"\n                            value={date}\n                            name=\"date\"\n                            onChange={(e) => {\n                                let { name, value } = e.target;\n                                let _value = moment().format('MM-DD-YYYY');\n                                if (value) {\n                                    _value = moment(value, 'YYYY-MM-DD').format(\n                                        'MM-DD-YYYY'\n                                    );\n                                }\n                                setPatientDetails({\n                                    ...patientDetails,\n                                    createdDate: _value,\n                                });\n                            }}\n                            type=\"date\"\n                        />\n                        <TextInput\n                            label=\"Scan\"\n                            value={patientDetails.scan}\n                            name=\"scan\"\n                            onChange={(e) => {\n                                let { name, value } = e.target;\n                                setPatientDetails({\n                                    ...patientDetails,\n                                    [name]: value,\n                                });\n                            }}\n                        />\n                        <TextInput\n                            label=\"Amount\"\n                            value={patientDetails.amount}\n                            name=\"amount\"\n                            onChange={(e) => {\n                                let { name, value } = e.target;\n                                setPatientDetails({\n                                    ...patientDetails,\n                                    [name]: value,\n                                });\n                            }}\n                        />\n                        <TextInput\n                            label=\"Refered By\"\n                            value={patientDetails.referedBy}\n                            name=\"referedBy\"\n                            onChange={(e) => {\n                                let { name, value } = e.target;\n                                setPatientDetails({\n                                    ...patientDetails,\n                                    [name]: value,\n                                });\n                            }}\n                        />\n                        <br />\n                        {isEdit ? (\n                            <button\n                                onClick={() => {\n                                    setIsEdit(false);\n                                    updateData();\n                                }}\n                            >\n                                Update\n                            </button>\n                        ) : (\n                            <button\n                                onClick={() => {\n                                    addData();\n                                }}\n                            >\n                                Add\n                            </button>\n                        )}\n                        <button\n                            onClick={() => {\n                                setPatientDetails({});\n                                setIsEdit(false);\n                            }}\n                        >\n                            Clear\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-12 18:35:54\n * @modify date 2021-05-12 18:35:54\n * @desc [description]\n */\nimport React, { useState } from 'react';\nimport { Card, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction Nav() {\n    const [error, setError] = useState('');\n    const { currentUser, logout } = useAuth();\n    const history = useHistory();\n\n    async function handleLogout() {\n        setError('');\n\n        try {\n            await logout();\n            history.push('/login');\n        } catch {\n            setError('Failed to log out');\n        }\n    }\n    return (\n        <header>\n            <nav>\n                <ul className=\"nav-area\">\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    {currentUser && (\n                        <>\n                            <li>\n                                <Link to=\"/patients\">Patients</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/reports\">Reports</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/settings\">Settings</Link>\n                            </li>\n                        </>\n                    )}\n                </ul>\n            </nav>\n            {currentUser && (\n                <Button variant=\"link\" onClick={handleLogout}>\n                    Log Out\n                </Button>\n            )}\n        </header>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\nimport Signup from './Signup';\n// import { Container } from 'react-bootstrap';\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { Switch, Route, Link } from 'react-router-dom';\n// import Dashboard from './Dashboard';\nimport Login from './Login';\nimport PrivateRoute from './PrivateRoute';\nimport ForgotPassword from './ForgotPassword';\nimport UpdateProfile from './UpdateProfile';\nimport Home from './Home';\nimport Nav from './Nav';\n\nfunction App() {\n    return (\n        <AuthProvider>\n            <div className=\"w-100\">\n                <Nav />\n                <div>\n                    <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <PrivateRoute\n                            path=\"/update-profile\"\n                            component={UpdateProfile}\n                        />\n                        <Route path=\"/signup\" component={Signup} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route\n                            path=\"/forgot-password\"\n                            component={ForgotPassword}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}